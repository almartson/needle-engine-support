import{_ as a,M as t,p as e,q as p,N as o,R as n,a1 as c}from"./framework-1a844b00.js";const i={},l=n("p",null,[n("a",{href:"/docs/community/contributions"},"Overview")],-1),u=c(`<p>Use the mouse wheel or touch delta to update a timeline&#39;s time.</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Behaviour<span class="token punctuation">,</span> PlayableDirector<span class="token punctuation">,</span> serializeable <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@needle-tools/engine&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Mathf <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@needle-tools/engine&quot;</span><span class="token punctuation">;</span>

<span class="token comment">// Example of setting a timeline&#39;s time </span>
<span class="token comment">// without relying on any HTML elements.</span>
<span class="token comment">// Here we directly use the mousewheel scroll and the touch delta</span>

<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">ScrollTimeline_2</span> <span class="token keyword">extends</span> <span class="token class-name">Behaviour</span> <span class="token punctuation">{</span>

    <span class="token decorator"><span class="token at operator">@</span><span class="token function">serializeable</span></span><span class="token punctuation">(</span>PlayableDirector<span class="token punctuation">)</span>
    timeline<span class="token operator">?</span><span class="token operator">:</span> PlayableDirector<span class="token punctuation">;</span>

    <span class="token decorator"><span class="token at operator">@</span><span class="token function">serializeable</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    scrollSpeed<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">=</span> <span class="token number">0.5</span><span class="token punctuation">;</span>

    <span class="token decorator"><span class="token at operator">@</span><span class="token function">serializeable</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    lerpSpeed<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">=</span> <span class="token number">2.5</span><span class="token punctuation">;</span>

    <span class="token keyword">private</span> targetTime<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

    <span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

        <span class="token keyword">this</span><span class="token punctuation">.</span>timeline<span class="token operator">?.</span><span class="token function">pause</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// Grab the mousewheel event</span>
        window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;wheel&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>evt<span class="token operator">:</span> WheelEvent<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">updateTime</span><span class="token punctuation">(</span>evt<span class="token punctuation">.</span>deltaY<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// Touch events are a bit more complicated</span>
        <span class="token comment">// We need to keep track of the last touch position</span>
        <span class="token comment">// and calculate the delta between the current and the last position</span>
        <span class="token keyword">let</span> lastTouchPosition <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
        window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;touchmove&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>evt<span class="token operator">:</span> TouchEvent<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">const</span> delta <span class="token operator">=</span> evt<span class="token punctuation">.</span>touches<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>clientY <span class="token operator">-</span> lastTouchPosition<span class="token punctuation">;</span>
            <span class="token comment">// We only want to apply the delta if it&#39;s not TOO big</span>
            <span class="token comment">// e.g. when the user is scrolling the page</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>delta <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">updateTime</span><span class="token punctuation">(</span><span class="token operator">-</span>delta<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// Update the last touch position</span>
            lastTouchPosition <span class="token operator">=</span> evt<span class="token punctuation">.</span>touches<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>clientY<span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token function">updateTime</span><span class="token punctuation">(</span>delta<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>timeline<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>targetTime <span class="token operator">+=</span> delta <span class="token operator">*</span> <span class="token number">0.01</span> <span class="token operator">*</span> <span class="token keyword">this</span><span class="token punctuation">.</span>scrollSpeed<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>targetTime <span class="token operator">=</span> Mathf<span class="token punctuation">.</span><span class="token function">clamp</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>targetTime<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>timeline<span class="token punctuation">.</span>duration<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token function">onBeforeRender</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>timeline<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>timeline<span class="token punctuation">.</span><span class="token function">pause</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>timeline<span class="token punctuation">.</span>time <span class="token operator">=</span> Mathf<span class="token punctuation">.</span><span class="token function">lerp</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>timeline<span class="token punctuation">.</span>time<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>targetTime<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>lerpSpeed <span class="token operator">*</span> <span class="token keyword">this</span><span class="token punctuation">.</span>context<span class="token punctuation">.</span>time<span class="token punctuation">.</span>deltaTime<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>timeline<span class="token punctuation">.</span><span class="token function">evaluate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2);function r(k,d){const s=t("contribution-header");return e(),p("div",null,[l,o(s,{url:"https://github.com/marwie",author:"marwie",page:"/docs/community/contributions/marwie",profileImage:"https://avatars.githubusercontent.com/u/5083203?s=100&v=4",githubUrl:"https://github.com/needle-tools/needle-engine-support/discussions/155",title:"Control a Timeline by scroll",gradient:"True"}),u])}const v=a(i,[["render",r],["__file","index.html.vue"]]);export{v as default};
