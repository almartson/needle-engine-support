import{_ as l,M as i,p as c,q as s,R as t,t as e,N as o,V as n,a1 as a}from"./framework-1a844b00.js";const h={},u=t("p",null,"Here is a overview of some of the components that we provide. Some of them map directly to Unity components, while others are core components from Needle Engine.",-1),p=t("p",null,[e("For a complete list please have a look at the components inside the folders "),t("code",null,"node_modules/@needle-tools/engine/engine-components"),e(" and "),t("code",null,"engine-components-experimental"),e(".")],-1),b=t("p",null,"You can always add your own components or add wrappers for Unity components we haven't provided yet.",-1),m=a('<h2 id="audio" tabindex="-1"><a class="header-anchor" href="#audio" aria-hidden="true">#</a> Audio</h2><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td><code>AudioListener</code></td><td></td></tr><tr><td><code>AudioSource</code></td><td>Use to play audio</td></tr></tbody></table><h2 id="animation" tabindex="-1"><a class="header-anchor" href="#animation" aria-hidden="true">#</a> Animation</h2><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td><code>Animator</code> with <code>AnimatorController</code></td><td>Export with animation state machine, conditions, transitions</td></tr><tr><td><code>Animation</code></td><td>Most basic animation component. Only first clip is exported</td></tr><tr><td><code>PlayableDirector</code> with <code>TimelineAsset</code></td><td>Export powerful sequences to control animation, audio, state and more</td></tr></tbody></table><h2 id="rendering" tabindex="-1"><a class="header-anchor" href="#rendering" aria-hidden="true">#</a> Rendering</h2><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td><code>Camera</code></td><td></td></tr><tr><td><code>Light</code></td><td>DirectionalLight, PointLight, Spotlight. Note that you can use it to bake light (e.g. Rectangular Light shapes) as well</td></tr><tr><td><code>XRFlag</code></td><td>Control when objects will be visible. E.g. only enable object when in AR</td></tr><tr><td><code>DeviceFlag</code></td><td>Control on which device objects will be visible</td></tr><tr><td><code>LODGroup</code></td><td></td></tr><tr><td><code>ParticleSystem</code></td><td>Experimental and currently not fully supported</td></tr><tr><td><code>VideoPlayer</code></td><td>Playback videos from url or referenced video file (will be copied to output on export)</td></tr><tr><td><code>MeshRenderer</code></td><td>Used to handle rendering of objects including lightmapping and instancing</td></tr><tr><td><code>SkinnedMeshRenderer</code></td><td><em>See MeshRenderer</em></td></tr><tr><td><code>SpriteRenderer</code></td><td>Used to render Sprites and Spriteanimations</td></tr><tr><td><code>Volume</code> with <code>PostProcessing</code> asset</td><td>Provides support for Bloom, DepthOfField, Vignette, ColorCorrection, Screenspace Ambient Occlusion (SSAO)</td></tr></tbody></table><h2 id="networking" tabindex="-1"><a class="header-anchor" href="#networking" aria-hidden="true">#</a> Networking</h2><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td><code>SyncedRoom</code></td><td>Main networking component. Put in your scene to enable networking</td></tr><tr><td><code>Networking</code></td><td>Used to setup backend server for networking.</td></tr><tr><td><code>SyncedTransform</code></td><td>Automatically network object transformation</td></tr><tr><td><code>SyncedCamera</code></td><td>Automatically network camera position and view to other users in room. You can define how the camera is being rendered by referencing an object</td></tr><tr><td><code>WebXRSync</code></td><td>Networks WebXR avatars (AR and VR)</td></tr><tr><td><code>Voip</code></td><td>Enables voice-chat</td></tr><tr><td><code>Screensharing</code></td><td>Enables screen-sharing capabilities</td></tr></tbody></table><h2 id="interaction" tabindex="-1"><a class="header-anchor" href="#interaction" aria-hidden="true">#</a> Interaction</h2><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td><code>EventSystem</code></td><td>Handles raising pointer events and UI events on objects in the scene</td></tr><tr><td><code>ObjectRaycater</code></td><td>Required for DragControls and Duplicatable</td></tr><tr><td><code>GraphicsRaycaster</code></td><td>Same as ObjectRaycaster but for UI elements</td></tr><tr><td><code>DragControls</code></td><td>Allows objects to be dragged in the scene. Requires raycaster in parent hierarchy, e.g. ObjectRaycaster</td></tr><tr><td><code>Duplicatable</code></td><td>Can duplicate assigned objects by drag. Requires DragControls</td></tr><tr><td><code>Interactable</code></td><td>Basic component to mark an object to be interactable.</td></tr><tr><td><code>OrbitControls</code></td><td>Add to camera to add camera orbit control functionality</td></tr><tr><td><code>SmoothFollow</code></td><td>Allows to interpolate smoothly to another object&#39;s transform</td></tr><tr><td><code>DeleteBox</code></td><td>Will destroy objects with the <code>Deletable</code> component when entering the box</td></tr><tr><td><code>Deletable</code></td><td>The GameObject this component is attached to will be deleted when it enters or intersects with a <code>DeleteBox</code></td></tr><tr><td><code>DropListener</code></td><td>Add to receive file drop events for uploading</td></tr><tr><td><code>SpatialTrigger</code></td><td>Use to raise event if an object enters a specific space or area. You can also use Physics events</td></tr><tr><td><code>SpatialTriggerReceiver</code></td><td>Use to receive events from SpatialTrigger</td></tr></tbody></table><h2 id="physics" tabindex="-1"><a class="header-anchor" href="#physics" aria-hidden="true">#</a> Physics</h2>',11),g={href:"https://rapier.rs/",target:"_blank",rel:"noopener noreferrer"},y=t("thead",null,[t("tr",null,[t("th",null,"Name"),t("th",null,"Description")])],-1),f=t("tr",null,[t("td",null,[t("code",null,"Rigidbody")]),t("td",null,"Add to make an object react to gravity (or be kinematic and static)")],-1),_=t("tr",null,[t("td",null,[t("code",null,"BoxCollider")]),t("td",null,[e("A Box collider shape that objects can collide with or raise trigger events when set to "),t("code",null,"trigger")])],-1),w=t("tr",null,[t("td",null,[t("code",null,"SphereCollider")]),t("td",null,[t("em",null,"See BoxCollider")])],-1),R=t("tr",null,[t("td",null,[t("code",null,"CapsuleCollider")]),t("td",null,[t("em",null,"See BoxCollider")])],-1),x=t("tr",null,[t("td",null,[t("code",null,"MeshCollider")]),t("td",null,[t("em",null,"See BoxCollider")])],-1),v={href:"https://docs.unity3d.com/Manual/class-PhysicMaterial.html",target:"_blank",rel:"noopener noreferrer"},k=t("code",null,"Physics Materials",-1),S=t("td",null,"Physics materials can be used to define e.g. the bouncyness of a collider",-1),D=t("h2",{id:"xr-webxr",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#xr-webxr","aria-hidden":"true"},"#"),e(" XR / WebXR")],-1),A=t("thead",null,[t("tr",null,[t("th",null,"Name"),t("th",null,"Description")])],-1),C=t("tr",null,[t("td",null,[t("code",null,"WebXR")]),t("td",null,"Add to scene for AR and VR avatars")],-1),U=t("tr",null,[t("td",null,[t("code",null,"WebXRSync")]),t("td",null,"Responsible for networking avatars")],-1),j=t("code",null,"USDZExporter",-1),N=t("td",null,"Add to enable USD and Quicklook support",-1),I=t("tr",null,[t("td",null,[t("code",null,"SpectatorCamera")]),t("td",null,"Mirrors VR view to screen when e.g. connected via Oculus Link")],-1),E=t("tr",null,[t("td",null,[t("code",null,"XRFlag")]),t("td",null,"Control when objects are visible, e.g. only in VR or AR or only in ThirdPerson")],-1),P=t("tr",null,[t("td",null,[t("code",null,"WebARSessionRoot")]),t("td",null,"Put your AR content inside a WebARSessionRoot for placement and scale")],-1),L=t("tr",null,[t("td",null,[t("code",null,"WebXRImageTracking")]),t("td",null,"Assign images to be tracked and optionally instantiate an object at the image position")],-1),T=t("tr",null,[t("td",null,[t("code",null,"WebXRPlaneTracking")]),t("td",null,"Create plane meshes or colliders for tracked planes")],-1),B=a('<h2 id="debugging" tabindex="-1"><a class="header-anchor" href="#debugging" aria-hidden="true">#</a> Debugging</h2><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td><code>GridHelper</code></td><td>Draws a grid</td></tr><tr><td><code>BoxGizmo</code></td><td>Draws a box</td></tr><tr><td><code>AxesHelper</code></td><td>Draws XYZ axes</td></tr><tr><td></td><td>Note: When you&#39;re writing custom code you can use the static <code>Gizmos</code> methods for drawing debugging lines and shapes</td></tr></tbody></table><h2 id="runtime-file-input-output" tabindex="-1"><a class="header-anchor" href="#runtime-file-input-output" aria-hidden="true">#</a> Runtime File Input/Output</h2><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td><code>GltfExport</code></td><td>Experimental! Use to export gltf from web runtime.</td></tr><tr><td><code>DropListener</code></td><td>Receive file drop events for uploading and networking</td></tr></tbody></table><h2 id="ui" tabindex="-1"><a class="header-anchor" href="#ui" aria-hidden="true">#</a> UI</h2>',5),O={href:"https://github.com/felixmariotto/three-mesh-ui",target:"_blank",rel:"noopener noreferrer"},V=a('<table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td><code>Canvas</code></td><td>Unity&#39;s UI system. Needs to be in World Space mode right now.</td></tr><tr><td><code>Text</code></td><td>Render Text using Unity&#39;s UI. Custom fonts are supported, a font atlas will be automatically generated on export. Use the font settings to control which characters are included in the atlas</td></tr><tr><td><code>Button</code></td><td>Receives click events - use the onClick event to react to it. It can be added too 3D scene objects as well</td></tr><tr><td><code>Image</code></td><td>Renders a sprite image</td></tr><tr><td><code>RawImage</code></td><td>Renders a texture</td></tr></tbody></table><p><strong>Note</strong>: Depending on your project, often a mix of spatial and 2D UI makes sense for cross-platform projects where VR, AR, and screens are supported. Typically, you&#39;d build the 2D parts with HTML for best accessibility, and the 3D parts with geometric UIs that also support depth offsets (e.g. button hover states and the like).</p><h2 id="other" tabindex="-1"><a class="header-anchor" href="#other" aria-hidden="true">#</a> Other</h2><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td><code>SceneSwitcher</code></td><td>Handles loading and unloading of other scenes or prefabs / glTF files. Has features to preload, change scenes via swiping, keyboard events or URL navigation</td></tr></tbody></table><h2 id="editor-only" tabindex="-1"><a class="header-anchor" href="#editor-only" aria-hidden="true">#</a> Editor Only</h2><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td><code>ExportInfo</code></td><td>Main component for managing the web project(s) to e.g. install or start the web app</td></tr><tr><td><code>EditorSync</code></td><td>Add to enable networking material or component value changes to the running three.js app directly from the Unity Editor without having to reload</td></tr></tbody></table>',6);function M(W,X){const d=i("RouterLink"),r=i("ExternalLinkIcon");return c(),s("div",null,[u,p,b,t("p",null,[e("Learn more in the "),o(d,{to:"/scripting.html"},{default:n(()=>[e("Scripting")]),_:1}),e(" section of our docs.")]),m,t("p",null,[e("Physics is implemented using "),t("a",g,[e("Rapier"),o(r)]),e(".")]),t("table",null,[y,t("tbody",null,[f,_,w,R,x,t("tr",null,[t("td",null,[t("a",v,[k,o(r)])]),S])])]),D,t("p",null,[o(d,{to:"/xr.html"},{default:n(()=>[e("Read the XR docs")]),_:1})]),t("table",null,[A,t("tbody",null,[C,U,t("tr",null,[t("td",null,[o(d,{to:"/everywhere-actions.html"},{default:n(()=>[j]),_:1})]),N]),I,E,P,L,T])]),B,t("p",null,[e("Spatial UI components are mapped from Unity UI (Canvas, not UI Toolkit) to "),t("a",O,[e("three-mesh-ui"),o(r)]),e(". UI can be animated.")]),V])}const G=l(h,[["render",M],["__file","component-reference.html.vue"]]);export{G as default};
