import{_ as a,M as t,p as e,q as p,N as o,R as n,a1 as c}from"./framework-1a844b00.js";const l={},i=n("p",null,[n("a",{href:"/docs/community/contributions"},"Overview")],-1),u=c(`<p>The following code enables you to use both controllers in VR (tested on Quest) and scale the player&#39;s perspective (XRRig) by squeezing the grab triggers and moving the controllers closer (pinch out) or further apart (pinch in). The boolean allowWorldScaling has to be ticked in unity for that to work.</p><p>Upon selecting a draggable object (Drag controls script), the player can scale up or down that object, while keeping the finger on the trigger and squeezing both grab buttons and moving the hands closer or apart.</p><p>The current script enables you to visually see the scale. Create a world canvas with a text component as a child. Assign the world canvas to scaleTextObject and the text to scaleText. scaleTextObject will then spawn in front of the player and follow the head movement whenever scaling.</p><p>At the moment the position of the hands (controllers) is done by finding the avatar&#39;s hands. I couldn&#39;t make it work otherwise. If you find a better way please share.</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Behaviour<span class="token punctuation">,</span> WebXR<span class="token punctuation">,</span>serializeable<span class="token punctuation">,</span> WebXREvent<span class="token punctuation">,</span>WebXRAvatar<span class="token punctuation">,</span>GameObject<span class="token punctuation">,</span> AvatarMarker<span class="token punctuation">,</span>Text<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@needle-tools/engine&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Object3D<span class="token punctuation">,</span> Vector3<span class="token punctuation">,</span>Quaternion<span class="token punctuation">,</span>PerspectiveCamera<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;three&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">SqueezeScale</span> <span class="token keyword">extends</span> <span class="token class-name">Behaviour</span> <span class="token punctuation">{</span>

   
    <span class="token keyword">private</span> webXR<span class="token operator">?</span><span class="token operator">:</span> WebXR<span class="token punctuation">;</span>

    <span class="token keyword">private</span> selectedObj<span class="token operator">:</span> Object3D<span class="token operator">|</span> <span class="token keyword">null</span> <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>

    <span class="token decorator"><span class="token at operator">@</span><span class="token function">serializeable</span></span><span class="token punctuation">(</span>Object3D<span class="token punctuation">)</span>
    scaleTextObject<span class="token operator">:</span> Object3D<span class="token operator">|</span> <span class="token keyword">null</span> <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    
    <span class="token decorator"><span class="token at operator">@</span><span class="token function">serializeable</span></span><span class="token punctuation">(</span>Text<span class="token punctuation">)</span>
    scaleText<span class="token operator">?</span><span class="token operator">:</span> Text<span class="token punctuation">;</span>

    <span class="token keyword">public</span> allowWorldScaling<span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token operator">=</span><span class="token boolean">false</span><span class="token punctuation">;</span>

    <span class="token keyword">private</span> leftSqueeze<span class="token operator">:</span><span class="token builtin">boolean</span><span class="token operator">=</span><span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> rightSqueeze<span class="token operator">:</span><span class="token builtin">boolean</span><span class="token operator">=</span><span class="token boolean">false</span><span class="token punctuation">;</span>

    <span class="token keyword">private</span> bothSqueezeStarted<span class="token operator">=</span><span class="token boolean">false</span><span class="token punctuation">;</span>

    <span class="token keyword">private</span> rigScaleUpdated<span class="token operator">=</span><span class="token boolean">false</span><span class="token punctuation">;</span>

    <span class="token keyword">private</span> initialDistance<span class="token operator">:</span><span class="token builtin">number</span><span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> initialScale<span class="token operator">:</span><span class="token builtin">number</span><span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> newScale<span class="token operator">:</span><span class="token builtin">number</span> <span class="token operator">|</span> <span class="token keyword">null</span><span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">;</span>

    <span class="token keyword">private</span> leftHand<span class="token operator">?</span><span class="token operator">:</span>Object3D<span class="token punctuation">;</span>
    <span class="token keyword">private</span> rightHand<span class="token operator">?</span><span class="token operator">:</span>Object3D<span class="token punctuation">;</span>
    <span class="token keyword">private</span> head<span class="token operator">?</span><span class="token operator">:</span>Object3D<span class="token punctuation">;</span>

    <span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>

        <span class="token keyword">let</span> _webxr<span class="token operator">=</span>GameObject<span class="token punctuation">.</span><span class="token function">findObjectOfType</span><span class="token punctuation">(</span>WebXR<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>_webxr<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>webXR<span class="token operator">=</span>_webxr<span class="token punctuation">;</span>
            <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;webxr found&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">//Wait for XR Session</span>
        WebXR<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span>WebXREvent<span class="token punctuation">.</span>XRStarted<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token comment">//listen to squeeze events</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>context<span class="token punctuation">.</span>xrSession<span class="token operator">?.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;squeezestart&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>event<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">onSqueezeEvent</span><span class="token punctuation">(</span>event<span class="token punctuation">,</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>context<span class="token punctuation">.</span>xrSession<span class="token operator">?.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;squeezeend&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>event<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">onSqueezeEvent</span><span class="token punctuation">(</span>event<span class="token punctuation">,</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>


    <span class="token function">onSqueezeEvent</span><span class="token punctuation">(</span>event<span class="token operator">:</span> XRInputSourceEvent<span class="token punctuation">,</span> status<span class="token operator">:</span><span class="token builtin">boolean</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        
        <span class="token keyword">if</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>inputSource<span class="token punctuation">.</span>handedness<span class="token operator">===</span><span class="token string">&quot;right&quot;</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>rightSqueeze<span class="token operator">=</span>status<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        
        <span class="token keyword">if</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>inputSource<span class="token punctuation">.</span>handedness<span class="token operator">===</span><span class="token string">&quot;left&quot;</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>leftSqueeze<span class="token operator">=</span>status<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>context<span class="token punctuation">.</span>isInVR<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token comment">//cache object selected if any</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">objectGrab</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            
            <span class="token comment">//if both grips are squeezed </span>
            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>leftSqueeze <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>rightSqueeze<span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                <span class="token comment">//if object is selected either in the left or right controller (only one)</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>selectedObj<span class="token operator">!=</span><span class="token keyword">null</span><span class="token punctuation">)</span>
                <span class="token punctuation">{</span>
                    <span class="token comment">//after initial distance value has been set</span>
                    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>bothSqueezeStarted<span class="token punctuation">)</span>
                    <span class="token punctuation">{</span>
                        <span class="token comment">//get current distance between controllers</span>
                        <span class="token keyword">const</span> scaleValue<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">calculateDistance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                        <span class="token comment">//get distance change since beginning of squeeze to get a &quot;pinch in/out&quot; effect</span>
                        <span class="token keyword">this</span><span class="token punctuation">.</span>newScale<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span>initialScale<span class="token operator">+</span>scaleValue<span class="token operator">-</span><span class="token keyword">this</span><span class="token punctuation">.</span>initialDistance<span class="token punctuation">;</span>

                        <span class="token comment">//avoid 0 and negative scales</span>
                        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>newScale<span class="token operator">&lt;</span><span class="token number">0.001</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>newScale<span class="token operator">=</span><span class="token number">0.001</span><span class="token punctuation">;</span><span class="token punctuation">}</span>

                        <span class="token comment">// scale object according to new distance since initial distance</span>
                        <span class="token keyword">this</span><span class="token punctuation">.</span>selectedObj<span class="token punctuation">.</span>scale<span class="token punctuation">.</span>x<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span>newScale<span class="token punctuation">;</span>
                        <span class="token keyword">this</span><span class="token punctuation">.</span>selectedObj<span class="token punctuation">.</span>scale<span class="token punctuation">.</span>y<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span>newScale<span class="token punctuation">;</span>
                        <span class="token keyword">this</span><span class="token punctuation">.</span>selectedObj<span class="token punctuation">.</span>scale<span class="token punctuation">.</span>z<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span>newScale<span class="token punctuation">;</span>

                        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">showVisual</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>newScale<span class="token punctuation">,</span><span class="token string">&quot;Object :&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                    <span class="token keyword">else</span>
                    <span class="token punctuation">{</span>
                        <span class="token comment">//get initial distance value (only once at a new squeeze both hands event)</span>
                        <span class="token keyword">this</span><span class="token punctuation">.</span>bothSqueezeStarted<span class="token operator">=</span><span class="token boolean">true</span><span class="token punctuation">;</span>

                        <span class="token keyword">this</span><span class="token punctuation">.</span>initialDistance<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">calculateDistance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                        <span class="token comment">//cache object&#39;s initial scale</span>
                        <span class="token keyword">this</span><span class="token punctuation">.</span>initialScale<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span>selectedObj<span class="token punctuation">.</span>scale<span class="token punctuation">.</span>x<span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">else</span>
                <span class="token punctuation">{</span>
                    <span class="token comment">//scale world ?</span>
                    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>webXR<span class="token operator">?.</span>Rig <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>allowWorldScaling<span class="token punctuation">)</span>
                    <span class="token punctuation">{</span>
                        <span class="token comment">//after initial distance value has been set</span>
                        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>bothSqueezeStarted<span class="token punctuation">)</span>
                        <span class="token punctuation">{</span>
                            <span class="token comment">//get current distance between controllers</span>
                            <span class="token keyword">const</span> scaleValue<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">calculateDistance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                            <span class="token comment">//get distance change since beginning of squeeze to get a &quot;pinch in/out&quot; effect</span>
                            <span class="token keyword">this</span><span class="token punctuation">.</span>newScale<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span>initialScale<span class="token operator">+</span>scaleValue<span class="token operator">-</span><span class="token keyword">this</span><span class="token punctuation">.</span>initialDistance<span class="token punctuation">;</span>

                            <span class="token comment">//avoid 0 and negative scales</span>
                            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>newScale<span class="token operator">&lt;</span><span class="token number">0.001</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>newScale<span class="token operator">=</span><span class="token number">0.001</span><span class="token punctuation">;</span><span class="token punctuation">}</span>

                            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">showVisual</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>newScale<span class="token punctuation">,</span> <span class="token string">&quot;World :&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                            <span class="token keyword">this</span><span class="token punctuation">.</span>rigScaleUpdated<span class="token operator">=</span><span class="token boolean">true</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span>
                        <span class="token keyword">else</span>
                        <span class="token punctuation">{</span>
                            <span class="token comment">//get initial distance value (only once at a new squeeze both hands event)</span>
                            <span class="token keyword">this</span><span class="token punctuation">.</span>bothSqueezeStarted<span class="token operator">=</span><span class="token boolean">true</span><span class="token punctuation">;</span>

                            <span class="token keyword">this</span><span class="token punctuation">.</span>initialDistance<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">calculateDistance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                            <span class="token comment">//cache object&#39;s initial scale</span>
                            <span class="token keyword">this</span><span class="token punctuation">.</span>initialScale<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span>webXR<span class="token punctuation">.</span>Rig<span class="token punctuation">.</span>scale<span class="token punctuation">.</span>x<span class="token punctuation">;</span>
                        <span class="token punctuation">}</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
                
            <span class="token punctuation">}</span>
            <span class="token keyword">else</span>
            <span class="token punctuation">{</span>
                <span class="token comment">//reset values</span>
                <span class="token keyword">this</span><span class="token punctuation">.</span>bothSqueezeStarted<span class="token operator">=</span><span class="token boolean">false</span><span class="token punctuation">;</span>

                <span class="token comment">//if world has been scaled, scale rig accordingly at the end of squeezing and once only</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>webXR<span class="token operator">?.</span>Rig <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>rigScaleUpdated <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>newScale<span class="token punctuation">)</span>
                <span class="token punctuation">{</span>
                    <span class="token comment">//change rig scale</span>
                    <span class="token keyword">this</span><span class="token punctuation">.</span>webXR<span class="token punctuation">.</span>Rig<span class="token punctuation">.</span>scale<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>newScale<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>newScale<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>newScale<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">this</span><span class="token punctuation">.</span>webXR<span class="token punctuation">.</span>Rig<span class="token punctuation">.</span><span class="token function">updateMatrixWorld</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    
                    <span class="token keyword">const</span> cam <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>context<span class="token punctuation">.</span>mainCamera <span class="token keyword">as</span> PerspectiveCamera<span class="token punctuation">;</span>
                    cam<span class="token punctuation">.</span>near<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span>newScale<span class="token operator">&gt;</span><span class="token number">2</span><span class="token operator">?</span><span class="token number">0.0001</span><span class="token operator">:</span><span class="token number">0.2</span><span class="token punctuation">;</span>
                    cam<span class="token punctuation">.</span><span class="token function">updateProjectionMatrix</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                    <span class="token comment">//reset</span>
                    <span class="token keyword">this</span><span class="token punctuation">.</span>rigScaleUpdated<span class="token operator">=</span><span class="token boolean">false</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>

                <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>scaleTextObject<span class="token punctuation">)</span>
                <span class="token punctuation">{</span>
                    <span class="token keyword">this</span><span class="token punctuation">.</span>scaleTextObject<span class="token punctuation">.</span>visible<span class="token operator">=</span><span class="token boolean">false</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>

                <span class="token keyword">this</span><span class="token punctuation">.</span>newScale<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">;</span>    
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token function">calculateDistance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token builtin">number</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">let</span> distance<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>

        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>leftHand <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>rightHand<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            
            <span class="token keyword">const</span> left<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span>leftHand<span class="token punctuation">.</span>position<span class="token punctuation">;</span>
            <span class="token keyword">const</span> right<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span>rightHand<span class="token punctuation">.</span>position<span class="token punctuation">;</span>

            <span class="token comment">// Calculate the difference between the positions</span>
            <span class="token keyword">const</span> dx <span class="token operator">=</span> left<span class="token punctuation">.</span>x <span class="token operator">-</span> right<span class="token punctuation">.</span>x<span class="token punctuation">;</span>
            <span class="token keyword">const</span> dy <span class="token operator">=</span> left<span class="token punctuation">.</span>y <span class="token operator">-</span> right<span class="token punctuation">.</span>y<span class="token punctuation">;</span>
            <span class="token keyword">const</span> dz <span class="token operator">=</span> left<span class="token punctuation">.</span>z <span class="token operator">-</span> right<span class="token punctuation">.</span>z<span class="token punctuation">;</span>

            <span class="token comment">// Calculate the distance using the Euclidean distance formula</span>
            distance <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">sqrt</span><span class="token punctuation">(</span>dx <span class="token operator">*</span> dx <span class="token operator">+</span> dy <span class="token operator">*</span> dy <span class="token operator">+</span> dz <span class="token operator">*</span> dz<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">else</span>
        <span class="token punctuation">{</span>
            <span class="token comment">//set positions of controllers from your avatar (only once)</span>
            <span class="token keyword">let</span> allAvatars <span class="token operator">=</span> AvatarMarker<span class="token punctuation">.</span>instances<span class="token punctuation">;</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>allAvatars<span class="token punctuation">.</span>length<span class="token operator">&gt;</span><span class="token number">0</span><span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>allAvatars<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>
                <span class="token punctuation">{</span>
                    <span class="token keyword">if</span><span class="token punctuation">(</span>allAvatars<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">isLocalAvatar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                    <span class="token punctuation">{</span>
                        <span class="token keyword">const</span> av<span class="token operator">=</span>allAvatars<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>avatar <span class="token keyword">as</span> WebXRAvatar<span class="token punctuation">;</span>
                        <span class="token keyword">if</span><span class="token punctuation">(</span>av<span class="token operator">!=</span><span class="token keyword">null</span><span class="token punctuation">)</span>
                        <span class="token punctuation">{</span>
                            <span class="token keyword">this</span><span class="token punctuation">.</span>leftHand<span class="token operator">=</span>av<span class="token punctuation">.</span>handLeft <span class="token keyword">as</span> Object3D<span class="token punctuation">;</span>
                            <span class="token keyword">this</span><span class="token punctuation">.</span>rightHand<span class="token operator">=</span>av<span class="token punctuation">.</span>handRight <span class="token keyword">as</span> Object3D<span class="token punctuation">;</span>
                            <span class="token keyword">this</span><span class="token punctuation">.</span>head <span class="token operator">=</span> av<span class="token punctuation">.</span>head <span class="token keyword">as</span> Object3D<span class="token punctuation">;</span>
                        <span class="token punctuation">}</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        
        <span class="token keyword">return</span> distance<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token function">showVisual</span><span class="token punctuation">(</span>scale<span class="token operator">:</span><span class="token builtin">number</span><span class="token punctuation">,</span> mesg<span class="token operator">:</span><span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token keyword">void</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>scaleTextObject <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>head <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>scaleText<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>scaleTextObject<span class="token punctuation">.</span>visible<span class="token operator">=</span><span class="token boolean">true</span><span class="token punctuation">;</span>

            <span class="token keyword">const</span> offset <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vector3</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            offset<span class="token punctuation">.</span><span class="token function">applyQuaternion</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>head<span class="token punctuation">.</span>quaternion<span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token keyword">this</span><span class="token punctuation">.</span>scaleTextObject<span class="token punctuation">.</span>position<span class="token punctuation">.</span><span class="token function">copy</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>head<span class="token punctuation">.</span>position<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>offset<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token keyword">const</span> roundedNum<span class="token operator">=</span> <span class="token operator">+</span>scale<span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>scaleText<span class="token punctuation">.</span>text<span class="token operator">=</span>mesg<span class="token operator">+</span><span class="token string">&quot; &quot;</span><span class="token operator">+</span>roundedNum<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        
    <span class="token punctuation">}</span>
    

    <span class="token function">objectGrab</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token keyword">void</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>webXR<span class="token operator">?.</span>RightController<span class="token operator">?.</span>grabbed<span class="token operator">?.</span>selected<span class="token punctuation">)</span> 
        <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>selectedObj <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>webXR<span class="token punctuation">.</span>RightController<span class="token punctuation">.</span>grabbed<span class="token punctuation">.</span>selected<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>webXR<span class="token operator">?.</span>LeftController<span class="token operator">?.</span>grabbed<span class="token operator">?.</span>selected<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>selectedObj <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>webXR<span class="token punctuation">.</span>LeftController<span class="token punctuation">.</span>grabbed<span class="token punctuation">.</span>selected<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">else</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>selectedObj<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5);function k(r,d){const s=t("contribution-header");return e(),p("div",null,[i,o(s,{url:"https://github.com/Web3Kev",author:"Web3Kev",page:"/docs/community/contributions/web3kev",profileImage:"https://avatars.githubusercontent.com/u/106066970?s=100&v=4",githubUrl:"https://github.com/needle-tools/needle-engine-support/discussions/159",title:"Squeeze to Scale (Object or World)  in VR",gradient:"True"}),u])}const b=a(l,[["render",k],["__file","index.html.vue"]]);export{b as default};
