import{_ as d}from"./ktx-env-variable-d006aea1.js";import{_ as l,M as n,p as c,q as p,R as e,t,N as o,V as h,a1 as s}from"./framework-1a844b00.js";const u="/docs/imgs/unity-build-window-menu.jpg",m="/docs/imgs/unity-build-window.jpg",r="/docs/imgs/unity-texture-compression.jpg",g="/docs/imgs/unity-texture-compression-options.jpg",y="/docs/imgs/unity-progressive-textures.jpg",b="/docs/imgs/unity-mesh-compression-component.jpg",f="/docs/imgs/unity-mesh-simplification.jpg",w="/docs/deployment/deploytonetlify-2.jpg",_="/docs/deployment/deploytonetlify.jpg",v="/docs/deployment/deploytoftp.jpg",x="/docs/deployment/deploytoftp2.jpg",T="/docs/deployment/deploytoftp3.jpg",j="/docs/deployment/buildoptions_gzip.jpg",k="/docs/deployment/deploytogithubpages.jpg",P={},D=s('<h2 id="what-does-deployment-mean" tabindex="-1"><a class="header-anchor" href="#what-does-deployment-mean" aria-hidden="true">#</a> What does deployment mean?</h2><p>Deployment is the process of making your application available to the public on a website. Needle Engine ensures that your project is as small and fast as possible by using the latest compression techniques such as <strong>KTX2</strong>, <strong>Draco</strong>, and <strong>Meshopt</strong>.</p><h2 id="available-deployment-targets" tabindex="-1"><a class="header-anchor" href="#available-deployment-targets" aria-hidden="true">#</a> Available Deployment Targets</h2><ul><li><a href="#deploy-to-glitch">Glitch</a> No login required, great for experimentation.</li><li><a href="#deploy-to-netlify">Netlify</a> Great for hosting your own website and custom domain names.</li><li><a href="#deploy-to-itch.io">itch.io</a> Often used for games.</li><li><a href="#deploy-to-github-pages">GitHub Pages</a> Free static page hosting.</li><li><a href="#deploy-to-github-pages">Vercel</a> Platform for frontend developers</li><li><a href="#deploy-to-ftp">FTP Upload</a> Deploy directly to any server with FTP support.</li><li><a href="#production-builds">Build to folder</a> Bring your project anywhere!</li></ul>',4),F={class:"custom-container tip"},U=e("p",{class:"custom-container-title"},"Feel something is missing?",-1),N={href:"https://discord.needle.tools",target:"_blank",rel:"noopener noreferrer"},S=s('<h2 id="deploying-to-the-web-from-unity" tabindex="-1"><a class="header-anchor" href="#deploying-to-the-web-from-unity" aria-hidden="true">#</a> Deploying to the web from Unity</h2><p>Open <code>File/Build Settings</code> and select <code>Needle Engine</code> for options!</p><details class="custom-container details"><summary>Where do I find the Build Options in Unity?</summary><p><img src="'+u+'" alt="image"><br><img src="'+m+'" alt="image"></p></details><p>To build your web project for deployment to a web server you can click <strong>Build</strong> in the Unity Editor Build Settings Window.<br> You can enable the <code>Development Build</code> checkbox to omit compression (see below) which requires toktx to be installed on your machine.</p><p>Nodejs is <strong>only</strong> required during development. The distributed website (using our default vite template) is a static page that doesn&#39;t rely on Nodejs and can be put on any regular web server. Nodejs is required if you want to run our minimalistic networking server on the same web server (automatically contained in the Glitch deployment process).</p><h2 id="development-builds" tabindex="-1"><a class="header-anchor" href="#development-builds" aria-hidden="true">#</a> Development Builds</h2><p>See guides above on how to access the options from within your Editor (e.g. Unity or Blender).</p>',7),I={href:"https://registry.khronos.org/KTX/specs/2.0/ktxspec.v2.html",target:"_blank",rel:"noopener noreferrer"},C={href:"https://google.github.io/draco/",target:"_blank",rel:"noopener noreferrer"},G=e("p",null,"We generally recommend making production builds for optimized file size and loading speed (see more information below).",-1),E=e("h2",{id:"production-builds",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#production-builds","aria-hidden":"true"},"#"),t(" Production Builds")],-1),B={href:"https://github.com/KhronosGroup/KTX-Software/releases",target:"_blank",rel:"noopener noreferrer"},A={href:"https://github.com/KhronosGroup/KTX-Software/releases",target:"_blank",rel:"noopener noreferrer"},O=e("br",null,null,-1),q=e("em",null,"If you're sure that you have installed toktx and it's part of your PATH but still can't be found, please restart your machine and try build again.",-1),W={class:"custom-container details"},H=e("summary",null,"Advanced: Custom glTF extensions",-1),M=e("code",null,"gltf-transform",-1),z={href:"https://www.npmjs.com/package/@needle-tools/gltf-build-pipeline",target:"_blank",rel:"noopener noreferrer"},L=s('<h3 id="optimization-and-compression-options" tabindex="-1"><a class="header-anchor" href="#optimization-and-compression-options" aria-hidden="true">#</a> Optimization and Compression Options</h3><h4 id="texture-compression" tabindex="-1"><a class="header-anchor" href="#texture-compression" aria-hidden="true">#</a> Texture compression</h4><p>Production builds will by default compress textures using <strong>KTX2</strong> (either ETC1S or UASTC depending on their usage in the project)<br> but you can also select <strong>WebP</strong> compression and select a quality level.</p><details class="custom-container details"><summary>How do I choose between ETC1S, UASTC and WebP compression?</summary><table><thead><tr><th>Format</th><th>ETC1S</th><th>UASTC</th><th>WebP</th></tr></thead><tbody><tr><td><strong>GPU Memory Usage</strong></td><td>Low</td><td>Low</td><td>High (uncompressed)</td></tr><tr><td><strong>File Size</strong></td><td>Low</td><td>High</td><td>Very low</td></tr><tr><td><strong>Quality</strong></td><td>Medium</td><td>Very high</td><td>Depends on quality setting</td></tr><tr><td><strong>Typical usage</strong></td><td>Works for everything, but best for color textures</td><td>High-detail data textures: normal maps, roughness, metallic, etc.</td><td>Files where ETC1S quality is not sufficient but UASTC is too large</td></tr></tbody></table></details><p>You have the option to select texture compression and progressive loading options per Texture by using the Needle Texture Importer options.</p><details class="custom-container details"><summary>How can I set per-texture compression settings?</summary><p><img src="'+r+'" alt="image"><br><img src="'+g+'" alt="image"></p></details><details class="custom-container details"><summary>Toktx can not be found</summary><p>Windows: Make sure you have added toktx to your system environment variables. You may need to restart your computer after adding it to refresh the environment variables. The default install location is <code>C:\\Program Files\\KTX-Software\\bin</code><br><img src="'+d+'" alt="image"></p></details><h4 id="progressive-texture-loading" tabindex="-1"><a class="header-anchor" href="#progressive-texture-loading" aria-hidden="true">#</a> Progressive Texture loading</h4><p>You can also add the <code>Progressive Texture Settings</code> component anywhere in your scene, to make all textures in your project be progressively loaded. Progressive loading is not applied to lightmaps or skybox textures at this point.</p><p>With progressive loading textures will first be loaded using a lower resolution version. A full quality version will be loaded dynamically when the texture becomes visible. This usually reduces initial loading of your scene significantly.</p><details class="custom-container details"><summary>How can I enable progressive texture loading?</summary><h3 id="progressive-textures-can-be-enabled-per-textureor-for-all-textures-in-your-project" tabindex="-1"><a class="header-anchor" href="#progressive-textures-can-be-enabled-per-textureor-for-all-textures-in-your-project" aria-hidden="true">#</a> Progressive textures can be enabled per texture<br>or for all textures in your project:</h3><p><img src="'+r+'" alt="image"></p><h3 id="enable-for-all-textures-in-the-project-that-don-t-have-any-other-specific-setting" tabindex="-1"><a class="header-anchor" href="#enable-for-all-textures-in-the-project-that-don-t-have-any-other-specific-setting" aria-hidden="true">#</a> Enable for all textures in the project that don&#39;t have any other specific setting:</h3><p><img src="'+y+'" alt="image"></p></details><h4 id="mesh-compression-and-simplification" tabindex="-1"><a class="header-anchor" href="#mesh-compression-and-simplification" aria-hidden="true">#</a> Mesh compression and simplification</h4><p>By default, a production build will compress meshes using Draco compression. Use the <code>MeshCompression</code> component to select between draco and mesh-opt per exported glTF.<br> Additionally you can setup mesh simplification to reduce the polycount for production builds in the mesh import settings (Unity). When viewing your application in the browser, you can append <code>?wireframe</code> to your URL to preview the meshes.</p><details class="custom-container details"><summary>How do I choose between Draco and Meshopt?</summary><table><thead><tr><th>Format</th><th>Draco</th><th>Meshopt</th></tr></thead><tbody><tr><td><strong>GPU Memory Usage</strong></td><td>Medium</td><td>Low</td></tr><tr><td><strong>File Size</strong></td><td>Lowest</td><td>Low</td></tr><tr><td><strong>Animation compression</strong></td><td>No</td><td>Yes</td></tr></tbody></table></details><details class="custom-container details"><summary>How can I set draco and meshopt compression settings?</summary><p>Add the MeshCompression component to select which compression should be applied per exported glTF.</p><p><img src="'+b+'" alt="image"></p><ul><li>To change compression for the <strong>current scene</strong> just add it anywhere in your root scene.</li><li>To change compression for a <strong>prefab or NestedGltf</strong> add it to a <code>GltfObject</code> or the prefab that is referenced / exported by any of your components.</li><li>To change compression for a <strong>referenced scene</strong> just add it to the referenced scene that is exported</li></ul></details><details class="custom-container details"><summary>Where to find mesh simplification options to reduce the vertex count when building for production?</summary><p>Select a Mesh and open the Needle importer options to see available options for the selected mesh:<br><img src="'+f+'" alt="image"></p></details><h2 id="deployment-options" tabindex="-1"><a class="header-anchor" href="#deployment-options" aria-hidden="true">#</a> Deployment Options</h2><h3 id="deploy-to-glitch" tabindex="-1"><a class="header-anchor" href="#deploy-to-glitch" aria-hidden="true">#</a> Deploy to Glitch 🎏</h3>',18),Y={href:"https://glitch.com/",target:"_blank",rel:"noopener noreferrer"},K=s('<p>You can deploy to glitch by adding the <code>DeployToGlitch</code> component to your scene and following the instructions.</p><details class="custom-container details"><summary>How do I deploy to Glitch from Unity?</summary><ol><li><p>Add the <code>DeployToGlitch</code> component to the GameObject that also has the <code>ExportInfo</code> component.</p></li><li><p>Click the <code>Remix on glitch</code> button on the component</p></li><li><p>Your browser will open the glitch project template</p></li><li><p>Find and click the <code>Remix another</code> button on the glitch website<br><img src="https://user-images.githubusercontent.com/5083203/179834548-acf68b02-95d8-43e5-802a-4e4086e39309.png" alt="image"></p></li><li><p>Glitch will now create a remix of the template. Copy the URL from your browser<br><img src="https://user-images.githubusercontent.com/5083203/179834901-f28852a9-6b06-4d87-8b5b-0384768c92c1.png" alt="image"></p></li><li><p>Open Unity again and paste the URL in the <code>Project Name</code> field of your <code>Deployment</code> component<br><img src="https://user-images.githubusercontent.com/5083203/179835274-033e5e1d-b70d-4b13-95ad-f1e2f159b14e.png" alt="image"></p></li><li><p>On Glitch open the <code>.env</code> file and enter a password in the field <code>Variable Value</code> next to the <strong>DEPLOY_KEY</strong><br><img src="https://user-images.githubusercontent.com/5083203/179835779-ec128288-4db2-42f7-adc0-3c1de6799cef.png" alt="image"></p></li><li><p>Add the same password in Unity<br><img src="https://user-images.githubusercontent.com/5083203/179835883-b524d23f-d887-4ac1-9a59-d5508b6b30c2.png" alt="image"></p></li></ol></details><h3 id="deploy-to-netlify" tabindex="-1"><a class="header-anchor" href="#deploy-to-netlify" aria-hidden="true">#</a> Deploy to Netlify</h3><details class="custom-container details"><summary>How do I deploy to Netlify from Unity?</summary><p>Just add the <code>DeployToNetlify</code> component to your scene and follow the instructions. You can create new projects with the click of a button or deployt to existing projects.</p><p><img src="'+w+'" alt="Deploy to netlify component"></p><p><img src="'+_+'" alt="Deploy to netlify component"></p></details><h3 id="deploy-to-vercel" tabindex="-1"><a class="header-anchor" href="#deploy-to-vercel" aria-hidden="true">#</a> Deploy to Vercel</h3><ol><li>Create a new project on vercel</li><li>Add your web project to a github repository</li><li>Add the repository to your project on vercel</li></ol>',6),V={href:"https://github.com/needle-engine/nextjs-sample",target:"_blank",rel:"noopener noreferrer"},R=e("h3",{id:"deploy-to-itch.io",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#deploy-to-itch.io","aria-hidden":"true"},"#"),t(" Deploy to itch.io")],-1),X={class:"custom-container details"},J=e("summary",null,"How do I deploy to itch.io from Unity?",-1),Q={href:"https://itch.io/game/new",target:"_blank",rel:"noopener noreferrer"},$=s('<li><p>Set <code>Kind of project</code> to <code>HTML</code><br><img src="https://user-images.githubusercontent.com/5083203/191211856-8a114480-bae7-4bd1-868e-2e955587acd7.png" alt="image"></p></li><li><p>Add the <code>DeployToItch</code> component to your scene and click the <code>Build</code> button<br><img src="https://user-images.githubusercontent.com/5083203/193812540-1881837e-ed9e-49fc-9658-52e5a914299a.png" alt="image"></p></li><li><p>Wait for the build to finish, it will open a folder with the final zip when it has finished</p></li><li><p>Upload to final zip to itch.io<br><img src="https://user-images.githubusercontent.com/5083203/191212661-f626f0cb-bc8e-4738-ad2c-3982aca65f39.png" alt="20220920-104629_Create_a_new_project_-itch io-_Google_Chrome-needle"></p></li><li><p>Select <code>This file will be played in the browser</code><br><img src="https://user-images.githubusercontent.com/5083203/191212967-00b687f3-bf56-449e-880c-d8daf8a52247.png" alt="image"></p></li><li><p>Save your itch page and view the itch project page.<br> It should now load your Needle Engine project 😊</p></li>',6),Z=e("h4",{id:"optional-settings",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#optional-settings","aria-hidden":"true"},"#"),t(" Optional settings")],-1),ee=e("p",null,[e("img",{src:"https://user-images.githubusercontent.com/5083203/191217263-355d9b72-5431-4170-8eca-bfbbb39ae810.png",alt:"image"})],-1),te={class:"custom-container details"},oe=e("summary",null,"Itch.io: failed to find index.html",-1),ie={id:"failed-to-find-index.html",tabindex:"-1"},se=e("p",null,[e("img",{src:"https://user-images.githubusercontent.com/5083203/191213162-2be63e46-2a65-4d41-a713-98c753ccb600.png",alt:"image"}),e("br"),t(" If you see this error after uploading your project make sure you do not upload a gzipped index.html. You can disable gzip compression in "),e("code",null,"vite.config.js"),t(" in your Needle web project folder. Just remove the line with "),e("code",null,"viteCompression({ deleteOriginFile: true })"),t(". The build your project again and upload to itch.")],-1),ne=s('<h3 id="deploy-to-ftp" tabindex="-1"><a class="header-anchor" href="#deploy-to-ftp" aria-hidden="true">#</a> Deploy to FTP</h3><details class="custom-container details"><summary>How do I deploy to my FTP server from Unity?</summary><ol><li>Add the <code>DeloyToFTP</code> component¹ on a GameObject in your scene (it is good practice to add it to the same GameObject as ExportInfo - but it is not mandatory)</li><li>Assign an FTP server asset and fill out server, username, and password if you have not already ²<br><em>This asset contains the access information to your FTP server - you get them when you create a new FTP account at your hosting provider</em></li><li>Click the <kbd>Build &amp; Deploy</kbd> button on the <code>DeployToFTP</code> component to build your project and uploading it to your FTP account</li></ol><p><img src="'+v+'" alt="Deploy to FTP component in Unity"><br><em>¹ Deploy to FTP component</em></p><p><img src="'+x+'" alt="Deploy to FTP server asset"><br><em>² FTP Server asset containing the access information of your FTP user account</em></p><p><img src="'+T+'" alt="Deploy to FTP component in Unity with server asset assigned"><br><em>Deploy To FTP component after server asset is assigned. You can directly deploy to a subfolder on your server using the path field</em></p></details><details class="custom-container details"><summary>How do I deploy to my FTP server manually?</summary><ol><li>Open <code>File &gt; Build Settings</code>, select <code>Needle Engine</code>, and click on <kbd>Build</kbd></li><li>Wait for the build to complete - the resulting <code>dist</code> folder will open automatically after all build and compression steps have run.</li><li>Copy the files from the <code>dist</code> folder to your FTP storage.</li></ol><p><strong>That&#39;s it!</strong> 😉</p><p><img src="https://user-images.githubusercontent.com/2693840/187311461-e6afb2d7-5761-48cf-bacb-1c1733bb768b.png" alt="20220830-003602_explorer-needle"></p><blockquote><p><strong>Note</strong>: If the result doesn&#39;t work when uploaded it might be that your web server does not support serving gzipped files. You have two options to fix the problem:<br> Option 1: You can try enabling gzip compression on your server using a htaccess file!<br> Option 2: You can turn gzip compression off in the build settings at File/Build Window and selecting the Needle Engine platform.</p></blockquote><blockquote><p><strong>Note</strong>: If you&#39;re getting errors during compression, please let us know and report a bug! If your project works locally and only fails when doing production builds, you can get unstuck right away by doing a Development Build. For that, simply toggle <code>Development Build</code> on in the Build Settings.</p></blockquote><p><img src="'+j+'" alt="Unity build window showing Needle Engine platform"></p></details><h3 id="deploy-to-github-pages" tabindex="-1"><a class="header-anchor" href="#deploy-to-github-pages" aria-hidden="true">#</a> Deploy to Github Pages</h3><details class="custom-container details"><summary>How do I deploy to Github Pages from Unity?</summary><p>Add the DeployToGithubPages component to your scene and copy-paste the github repository (or github pages url) that you want to deploy to.<br><img src="'+k+'" alt="Deploy To github pages component"></p></details><hr><h2 id="cross-platform-deployment-workflows" tabindex="-1"><a class="header-anchor" href="#cross-platform-deployment-workflows" aria-hidden="true">#</a> Cross-Platform Deployment Workflows</h2><p>It&#39;s possible to create regular Unity projects where you can build both to Needle Engine and to regular Unity platforms such as Desktop or even WebGL. Our &quot;component mapping&quot; approach means that no runtime logic is modified inside Unity - if you want you can regularily use Play Mode and build to other target platforms. In some cases this will mean that you have duplicate code (C# code and matching TypeScript logic). The amount of extra work through this depends on your project.</p><p><strong>Enter Play Mode in Unity</strong><br> In <code>Project Settings &gt; Needle Engine</code>, you can turn off <code>Override Play Mode</code> and <code>Override Build settings</code> to switch between Needle&#39;s build process and Unity&#39;s build process:<br><img src="https://user-images.githubusercontent.com/2693840/187308490-5acb9016-ffff-4113-be62-4de450a42b08.png" alt="image"></p><h2 id="commandline-arguments-for-unity" tabindex="-1"><a class="header-anchor" href="#commandline-arguments-for-unity" aria-hidden="true">#</a> Commandline Arguments for Unity</h2><p>Needle Engine for Unity supports various commandline arguments to export single assets (Prefabs or Scenes) or to build a whole web project in batch mode (windowsless).</p><p>The following list gives a table over the available options:</p><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td><code>-scene</code></td><td>path to a scene or a asset to be exported e.g. <code>Assets/path/to/myObject.prefab</code> or <code>Assets/path/to/myScene.unity</code></td></tr><tr><td><code>-outputPath &lt;path/to/output.glb&gt;</code></td><td>set the output path for the build (only valid when building a scene)</td></tr><tr><td><code>-buildProduction</code></td><td>run a production build</td></tr><tr><td><code>-buildDevelopment</code></td><td>run a development build</td></tr><tr><td><code>-debug</code></td><td>open a console window for debugging</td></tr></tbody></table>',13);function re(ae,de){const i=n("ExternalLinkIcon"),a=n("RouterLink");return c(),p("div",null,[D,e("div",F,[U,e("p",null,[t("Please let us know in our "),e("a",N,[t("discord"),o(i)]),t("!")])]),S,e("p",null,[t("The main difference to a production build is that it does not perform "),e("a",I,[t("ktx2"),o(i)]),t(" and "),e("a",C,[t("draco"),o(i)]),t(" compression (for reduction of file size and loading speed) as well as the option to progressively load high-quality textures.")]),G,E,e("p",null,[t("To make a production build, you need to have "),e("a",B,[t("toktx"),o(i)]),t(" installed, which provides texture compression using the KTX2 supercompression format. Please go to the "),e("a",A,[t("toktx Releases Page"),o(i)]),t(" and download and install the latest version (v4.1.0 at the time of writing). You may need to restart Unity after installing it."),O,q]),e("details",W,[H,e("p",null,[t("If you plan on adding your own custom glTF extensions, building for production requires handling those in "),M,t(". See "),e("a",z,[t("@needle-tools/gltf-build-pipeline"),o(i)]),t(" for reference.")])]),L,e("p",null,[e("a",Y,[t("Glitch"),o(i)]),t(" provides a fast and free way for everyone to host small and large websites. We're providing an easy way to remix and deploy to a new Glitch page (based on our starter), and also to run a minimalistic networking server on the same Glitch page if needed.")]),K,e("p",null,[t("See our "),e("a",V,[t("sample project"),o(i)]),t(" for the project configuration")]),R,e("details",X,[J,e("ol",null,[e("li",null,[e("p",null,[t("Create a new project on "),e("a",Q,[t("itch.io"),o(i)])])]),$]),Z,ee]),e("details",te,[oe,e("h4",ie,[o(a,{class:"header-anchor",to:"/#failed-to-find-index.html","aria-hidden":"true"},{default:h(()=>[t("#")]),_:1}),t(" Failed to find index.html")]),se]),ne])}const pe=l(P,[["render",re],["__file","deployment.html.vue"]]);export{pe as default};
